import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'nu.studer.jooq' version '9.0'
    id 'org.jmailen.kotlinter' version '4.3.0'
    id 'maven-publish'
}

group 'net.arvandor'
version '1.7.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url = 'https://repo.rpkit.com/repository/maven-public/' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.9.23'
    implementation 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    implementation 'com.rpkit:rpk-core-bukkit:2.4.2:all'
    implementation 'com.rpkit:rpk-player-lib-bukkit:2.4.2:all'
    implementation 'com.rpkit:rpk-character-lib-bukkit:2.4.2:all'
    implementation 'com.rpkit:rpk-notification-lib-bukkit:2.4.2:all'
    implementation 'org.jooq:jooq:3.19.7'
    implementation 'org.flywaydb:flyway-core:10.11.1'
    implementation 'org.flywaydb:flyway-mysql:10.11.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'com.mixpanel:mixpanel-java:1.5.2'
    implementation platform('org.http4k:http4k-bom:5.16.2.0')
    implementation 'org.http4k:http4k-core'
    implementation 'org.http4k:http4k-server-undertow'
    implementation 'org.http4k:http4k-contract'
    implementation 'org.http4k:http4k-format-gson'
    implementation 'org.jboss.xnio:xnio-nio:3.8.8.Final'
    implementation 'com.github.NuVotifier:NuVotifier:2.7.2'
    jooqGenerator 'org.jooq:jooq-meta-extensions:3.19.7'
}

jooq {
    version = '3.19.7'
    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                        inputSchema = 'PUBLIC'
                        includes = '.*'
                        excludes = ''
                        properties {
                            property {
                                key = 'scripts'
                                value = 'src/main/resources/net/arvandor/numinoustreasury/db/migration'
                            }
                            property {
                                key = 'sort'
                                value = 'semantic'
                            }
                            property {
                                key = 'defaultNameCase'
                                value = 'lower'
                            }
                        }
                    }
                    target {
                        packageName = 'net.arvandor.numinoustreasury.jooq'
                    }
                }
            }
        }
    }
}

tasks.check.dependsOn 'formatKotlin'

processResources {
    filter ReplaceTokens, tokens: [
            'version': version
    ]
}

shadowJar {
    mergeServiceFiles()
    dependencies {
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib-jdk8'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib-common'))
        include(dependency('org.jetbrains.kotlin:kotlin-reflect'))
        include(dependency('org.jetbrains:annotations'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib-jdk7'))
        include(dependency('org.bstats:bstats-bukkit'))
        include(dependency('org.bstats:bstats-base'))
        include(dependency('dev.forkhandles:result4k'))
        include(dependency('org.jooq:jooq'))
        include(dependency('io.r2dbc:r2dbc-spi'))
        include(dependency('org.reactivestreams:reactive-streams'))
        include(dependency('jakarta.xml.bind:jakarta.xml.bind-api'))
        include(dependency('com.sun.activation:jakarta.activation'))
        include(dependency('org.flywaydb:flyway-core'))
        include(dependency('org.flywaydb:flyway-mysql'))
        include(dependency('com.fasterxml.jackson.dataformat:jackson-dataformat-toml'))
        include(dependency('com.fasterxml.jackson.core:jackson-databind'))
        include(dependency('com.fasterxml.jackson.core:jackson-annotations'))
        include(dependency('com.fasterxml.jackson.core:jackson-core'))
        include(dependency('com.google.code.gson:gson'))
        include(dependency('org.mariadb.jdbc:mariadb-java-client'))
        include(dependency('com.github.waffle:waffle-jna'))
        include(dependency('net.java.dev.jna:jna'))
        include(dependency('net.java.dev.jna:jna-platform'))
        include(dependency('com.github.ben-manes.caffeine:caffeine'))
        include(dependency('org.checkerframework:checker-qual'))
        include(dependency('com.google.errorprone:error_prone_annotations'))
        include(dependency('com.zaxxer:HikariCP'))
        include(dependency('com.google.code.gson:gson'))
        include(dependency('com.dansplugins:ponder-bukkit'))
        include(dependency('com.dansplugins:ponder-commands'))
        include(dependency('com.mixpanel:mixpanel-java'))
        include(dependency('org.json:json'))
        include(dependency('org.http4k:http4k-core'))
        include(dependency('org.http4k:http4k-server-undertow'))
        include(dependency('org.http4k:http4k-realtime-core'))
        include(dependency('io.undertow:undertow-core'))
        include(dependency('org.jboss.logging:jboss-logging'))
        include(dependency('org.jboss.xnio:xnio-api'))
        include(dependency('org.jboss.xnio:xnio-nio'))
        include(dependency('org.wildfly.common:wildfly-common'))
        include(dependency('org.wildfly.client:wildfly-client-config'))
        include(dependency('org.jboss.threads:jboss-threads'))
        include(dependency('org.http4k:http4k-contract'))
        include(dependency('org.http4k:http4k-contract-jsonschema'))
        include(dependency('org.http4k:http4k-format-core'))
        include(dependency('org.http4k:http4k-format-gson'))
    }

    relocate 'com.google', 'net.arvandor.numinoustreasury.shadow.com.google'
    relocate 'org.mariadb', 'net.arvandor.numinoustreasury.shadow.org.mariadb'
    relocate 'com.sun', 'net.arvandor.numinoustreasury.shadow.com.sun'
    relocate 'com.zaxxer', 'net.arvandor.numinoustreasury.shadow.com.zaxxer'
    relocate 'google', 'net.arvandor.numinoustreasury.shadow.google'
    relocate 'io.r2dbc', 'net.arvandor.numinoustreasury.shadow.io.r2dbc'
    relocate 'jakarta', 'net.arvandor.numinoustreasury.shadow.jakarta'
    relocate 'org.flywaydb', 'net.arvandor.numinoustreasury.shadow.org.flywaydb'
    relocate 'org.intellij', 'net.arvandor.numinoustreasury.shadow.org.intellij'
    relocate 'org.jetbrains', 'net.arvandor.numinoustreasury.shadow.org.jetbrains'
    relocate 'org.jooq', 'net.arvandor.numinoustreasury.shadow.org.jooq'
    relocate 'org.reactivestreams', 'net.arvandor.numinoustreasury.shadow.org.reactivestreams'
    relocate 'com.mixpanel', 'net.arvandor.numinoustreasury.shadow.com.mixpanel'
    relocate 'org.json', 'net.arvandor.numinoustreasury.shadow.org.json'
    relocate 'com.fasterxml', 'net.arvandor.numinoustreasury.shadow.com.fasterxml'
    relocate 'com.github', 'net.arvandor.numinoustreasury.shadow.com.github'
    relocate 'org.apache', 'net.arvandor.numinoustreasury.shadow.org.apache'
    relocate 'org.checkerframework', 'net.arvandor.numinoustreasury.shadow.org.checkerframework'
    relocate 'waffle', 'net.arvandor.numinoustreasury.shadow.waffle'
    relocate 'io.undertow', 'net.arvandor.numinoustreasury.shadow.io.undertow'
    relocate 'org.http4k', 'net.arvandor.numinoustreasury.shadow.org.http4k'
    relocate 'org.jboss', 'net.arvandor.numinoustreasury.shadow.org.jboss'
    relocate 'org.wildfly', 'net.arvandor.numinoustreasury.shadow.org.wildfly'
    relocate 'org.xnio', 'net.arvandor.numinoustreasury.shadow.org.xnio'
}

artifacts {
    archives shadowJar
}

def githubUsername = ""
def githubToken = ""
def githubPropertiesFile = new File(project.projectDir, "github.properties")
if (githubPropertiesFile.exists()) {
    def githubProperties = new Properties()
    githubProperties.load(new FileInputStream(githubPropertiesFile))
    githubUsername = githubProperties.get("github-username")
    githubToken = githubProperties.get("github-token")
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/chronicles-of-arvandor/numinous-treasury/")
            credentials {
                username = githubUsername
                password = githubToken
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
